root = true

[*]

indent_style = space
trim_trailing_whitespace = true

[*.cs]

indent_size = 4
charset = utf-8-bom
insert_final_newline = true
tab_width = 4

[*.{xml,json,csproj,props,targets,config,nuspect}]

indent_size = 4

[*.cs]

dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true

dotnet_style_coalesce_expression = true
dotnet_style_null_propagation = true

dotnet_style_prefer_auto_properties = true

dotnet_style_explicit_tuple_names = true

dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true

dotnet_style_require_accessibility_modifiers = always

dotnet_style_prefer_is_null_check_over_reference_equality_method = true

dotnet_style_readonly_field = true

dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = false

dotnet_style_parentheses_in_arithmetic_binary_operators	= always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators	= always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators	= always_for_clarity

dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

dotnet_style_prefer_compound_assignment = true

dotnet_sort_system_directives_first = false
dotnet_separate_import_directive_groups = true

dotnet_style_namespace_match_folder = true

dotnet_code_quality_unused_parameters = all

dotnet_style_prefer_simplified_interpolation = true
dotnet_style_prefer_simplified_boolean_expressions = true

dotnet_remove_unnecessary_suppression_exclusions = none

dotnet_style_operator_placement_when_wrapping = beginning_of_line

dotnet_style_allow_multiple_blank_lines_experimental = false

# Simplify name
dotnet_diagnostic.IDE0001.severity = warning

# Simplify member access
dotnet_diagnostic.IDE0002.severity = warning

# Remove this or Me qualification
dotnet_diagnostic.IDE0003.severity = warning

# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = warning

# Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = warning

# Use var instead of explicit type
dotnet_diagnostic.IDE0007.severity = warning

# Use explicit type instead of var
dotnet_diagnostic.IDE0008.severity = none

# Add this or Me qualification
dotnet_diagnostic.IDE0009.severity = none

# Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = warning

# Add braces
dotnet_diagnostic.IDE0011.severity = warning

# Use throw expression
dotnet_diagnostic.IDE0016.severity = warning

# Use object initializers
dotnet_diagnostic.IDE0017.severity = warning

# Inline variable declaration
dotnet_diagnostic.IDE0017.severity = warning

# Use pattern matching to avoid as followed by a null check
dotnet_diagnostic.IDE0019.severity = warning

# Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.IDE0020.severity = warning

# Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = warning

# Use expression body for methods
dotnet_diagnostic.IDE0022.severity = none

# Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = warning

# Use expression body for operators
dotnet_diagnostic.IDE0024.severity = warning

# Use expression body for properties
dotnet_diagnostic.IDE0025.severity = warning

# Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = warning

# Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = warning

# Use collection initializers
dotnet_diagnostic.IDE0028.severity = warning

# Use coalesce expression (non-nullable types)
dotnet_diagnostic.IDE0029.severity = warning

# Use coalesce expression (nullable types)
dotnet_diagnostic.IDE0030.severity = warning

# Use null propagation
dotnet_diagnostic.IDE0031.severity = warning

# Use auto property
dotnet_diagnostic.IDE0032.severity = warning

# Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = warning

# Simplify default expression
dotnet_diagnostic.IDE0034.severity = warning

# Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# Order modifiers
dotnet_diagnostic.IDE0036.severity = warning

# Use inferred member name
dotnet_diagnostic.IDE0037.severity = warning

# Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.IDE0038.severity = warning

# Use local function instead of lambda
dotnet_diagnostic.IDE0039.severity = warning

# Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning

# Use is null check
dotnet_diagnostic.IDE0041.severity = warning

# Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = warning

# Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning

# Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = warning

# Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = warning

# Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = warning

# Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = warning

# Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = warning

# Convert anonymous type to tuple
dotnet_diagnostic.IDE0050.severity = warning

# Remove unused private member
dotnet_diagnostic.IDE0051.severity = warning

# Remove unread private member
dotnet_diagnostic.IDE0052.severity = warning

# Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = warning

# Use compound assignment
dotnet_diagnostic.IDE0054.severity = warning

# Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# Use index operator
dotnet_diagnostic.IDE0056.severity = warning

# Use range operator
dotnet_diagnostic.IDE0057.severity = warning

# Remove unused expression value
dotnet_diagnostic.IDE0058.severity = none

# Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = warning

# Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning

# Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = warning

# Make local function static
dotnet_diagnostic.IDE0062.severity = warning

# Use simple using statement
dotnet_diagnostic.IDE0063.severity = warning

# Make struct fields writable
dotnet_diagnostic.IDE0064.severity = warning

# using directive placement
dotnet_diagnostic.IDE0065.severity = warning

# Use switch expression
dotnet_diagnostic.IDE0066.severity = warning

# Use System.HashCode.Combine
dotnet_diagnostic.IDE0070.severity = warning

# Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning

# Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = none

# Use file header
dotnet_diagnostic.IDE0073.severity = warning

# Use coalesce compound assignment
dotnet_diagnostic.IDE0074.severity = warning

# Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = warning

# Remove invalid global SuppressMessageAttribute
dotnet_diagnostic.IDE0076.severity = warning

# Avoid legacy format target in global SuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = warning

# Use pattern matching
dotnet_diagnostic.IDE0078.severity = warning

# Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = warning

# Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# Convert typeof to nameof
dotnet_diagnostic.IDE0082.severity = warning

# Use pattern matching (not operator)
dotnet_diagnostic.IDE0083.severity = warning

# Simplify new expression
dotnet_diagnostic.IDE0090.severity = warning

# Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = warning

# Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = warning

# Prefer null check over type check
dotnet_diagnostic.IDE0150.severity = warning

# Use block-scoped namespace
dotnet_diagnostic.IDE0160.severity = warning

# Use file-scoped namespace
dotnet_diagnostic.IDE0161.severity = warning

# Simplify property pattern
dotnet_diagnostic.IDE0170.severity = warning

# Use tuple to swap values
dotnet_diagnostic.IDE0180.severity = warning

# Use conditional delegate call
dotnet_diagnostic.IDE1005.severity = warning

# Naming styles
dotnet_diagnostic.IDE1006.severity = warning

# Disallow multiple blank lines
dotnet_diagnostic.IDE2000.severity = warning

# Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = none

# Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# A constructor should not follow a property
dotnet_diagnostic.SA1201.severity = none

# The keywords within the declaration of an element do not follow a standard ordering scheme
dotnet_diagnostic.SA1206.severity = none

# Element should begin with an uppercase letter
dotnet_diagnostic.SA1300.severity = none

# Field should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = none

# Element should not be on a single line
dotnet_diagnostic.SA1502.severity = none

# Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = none

# Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = none

# The property's documentation summary text should begin with: 'Gets'
dotnet_diagnostic.SA1623.severity = none

# The file header is missing or not located at the top of the file
dotnet_diagnostic.SA1633.severity = none

# Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1642.severity = none

csharp_style_throw_expression = true

csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

csharp_prefer_braces = true

csharp_style_throw_expression = true

csharp_style_inlined_variable_declaration = true

csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true

csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_operators = when_on_single_line
csharp_style_expression_bodied_properties = when_on_single_line
csharp_style_expression_bodied_indexers = when_on_single_line
csharp_style_expression_bodied_accessors = when_on_single_line
csharp_style_expression_bodied_local_functions = when_on_single_line

csharp_prefer_simple_default_expression = true

csharp_preferred_modifier_order = new, file, public, private, protected, internal, static, extern, virtual, abstract, sealed, override, readonly, unsafe, volatile, async

csharp_style_prefer_local_over_anonymous_function = true

csharp_style_deconstructed_variable_declaration = true

csharp_style_expression_bodied_lambdas = when_on_single_line

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_style_prefer_index_operator = true
csharp_style_prefer_range_operator = true

csharp_style_unused_value_expression_statement_preference = discard_variable
csharp_style_unused_value_assignment_preference = discard_variable

csharp_prefer_static_local_function = true
csharp_prefer_simple_using_statement = true:warning

csharp_using_directive_placement = inside_namespace

csharp_style_prefer_switch_expression = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_not_pattern = true

csharp_style_implicit_object_creation_when_type_is_apparent = true

csharp_style_prefer_null_check_over_type_check = true

csharp_style_namespace_declarations = file_scoped

csharp_style_prefer_extended_property_pattern = true

csharp_style_prefer_tuple_swap = true

csharp_style_conditional_delegate_call = true

csharp_indent_labels = one_less_than_current

csharp_style_prefer_method_group_conversion = true

csharp_style_prefer_top_level_statements = false
csharp_space_around_binary_operators = before_and_after

csharp_style_prefer_primary_constructors = false

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.abstracts_should_be_begins_with_a.severity = warning
dotnet_naming_rule.abstracts_should_be_begins_with_a.symbols = abstract
dotnet_naming_rule.abstracts_should_be_begins_with_a.style = begins_with_a

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.abstract.applicable_kinds = class
dotnet_naming_symbols.abstract.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.abstract.required_modifiers = abstract

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.members.applicable_kinds = property, field, event, method
dotnet_naming_symbols.members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.members.required_modifiers =

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with_a.required_prefix = A
dotnet_naming_style.begins_with_a.required_suffix = 
dotnet_naming_style.begins_with_a.word_separator = 
dotnet_naming_style.begins_with_a.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case